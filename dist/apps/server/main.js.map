{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;ACAA,iEAA6C;AAEpC,kCAAW;;;;;;;;;ACFpB,yCAAiC;AACjC,6CAAqD;AAErD,MAAM,MAAM,GAAW,oBAAM,GAAE,CAAC;AAChC,MAAM,MAAM,GAAG,SAAS,CAAC;AACzB,sCAAsC;AAEtC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,QAAQ,EAAE,4BAAc,CAAC,QAAQ,CAAC,CAAC;AACvD,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,YAAY,EAAE,4BAAc,CAAC,WAAW,CAAC,CAAC;AAC9D,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,QAAQ,EAAE,4BAAc,CAAC,OAAO,CAAC,CAAC;AACvD,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,YAAY,EAAE,4BAAc,CAAC,UAAU,CAAC,CAAC;AAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,YAAY,EAAE,4BAAc,CAAC,UAAU,CAAC,CAAC;AAEhE,qBAAe,MAAM,CAAC;;;;;;;;;;;ACbtB,oEAAgD;AAEvC,wCAAc;;;;;;;;;;;ACDvB,wCAAgC;AAChC,yCAA4C;AAG5C,MAAM,QAAQ,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IAClE,MAAM,mBAAU;SACX,IAAI,EAAE;SACN,MAAM,CAAC,eAAe,CAAC;SACvB,IAAI,CAAC,CAAC,KAAa,EAAE,EAAE;QACpB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,iBAAiB;YAC1B,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACX,CAAC,EAAC;AAyFO,4BAAQ;AAvFjB,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IACrE,MAAM,mBAAU;SACX,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;SACvB,MAAM,CAAC,eAAe,CAAC;SACvB,IAAI,CAAC,CAAC,IAAU,EAAE,EAAE;QACjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,qBAAqB;YAC9B,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACX,CAAC,EAAC;AAyEiB,kCAAW;AAvE9B,MAAM,OAAO,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IACjE,MAAM,IAAI,GAAS,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAM,IAAI,GAAG;QACT,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,YAAY,EAAE,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;QAChD,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,CAAC;IAEF,MAAM,IAAI,mBAAU,CAAC,IAAI,CAAC;SACrB,IAAI,EAAE;SACN,IAAI,CAAC,CAAO,IAAU,EAAE,EAAE;QACvB,MAAM,KAAK,GAAW,MAAM,mBAAU,CAAC,IAAI,EAAE,CAAC;QAC9C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC,EAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,kCAAkC;YAC3C,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACX,CAAC,EAAC;AA2C8B,0BAAO;AAzCvC,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IACpE,MAAM,EACF,MAAM,EAAE,EAAE,EAAE,EAAE,EACd,IAAI,EACP,GAAG,GAAG,CAAC;IAER,MAAM,mBAAU;SACX,iBAAiB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;SACpC,IAAI,CAAC,CAAO,WAAiB,EAAE,EAAE;QAC9B,MAAM,KAAK,GAAW,MAAM,mBAAU,CAAC,IAAI,EAAE,CAAC;QAC9C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;IACvD,CAAC,EAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,kCAAkC;YAC3C,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACX,CAAC,EAAC;AAsBuC,gCAAU;AApBnD,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IACpE,MAAM,mBAAU;SACX,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;SAChC,IAAI,CAAC,GAAS,EAAE;QACb,MAAM,KAAK,GAAW,MAAM,mBAAU,CAAC,IAAI,EAAE,CAAC;QAC9C,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,qBAAqB;YAC9B,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,EAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,QAAQ,GAAG;YACb,OAAO,EAAE,yBAAyB;YAClC,KAAK;SACR,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACX,CAAC,EAAC;AAEmD,gCAAU;;;;;;;AC5G/D;;;;;;;;;;ACAA,gEAAgC;AAEvB,qBAFF,cAAU,CAEE;;;;;;;;;ACDnB,0CAAyC;AAEzC,MAAM,UAAU,GAAW,IAAI,iBAAM,CACjC;IACI,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACxC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACrC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACnC,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IAClC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACtC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC1C,YAAY,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE;IAC7D,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;IAC1C,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE;CAClD,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;IACzB,OAAO,IAAI,CAAC,GAAG,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE;IACrB,QAAQ,EAAE,IAAI;CACjB,CAAC,CAAC;AAEH,qBAAe,oBAAK,EAAO,MAAM,EAAE,UAAU,CAAC,CAAC;;;;;;;AC9B/C;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,kEAA8B;AAC9B,mEAAgC;AAChC,+DAAwB;AACxB,wCAA6C;AAC7C,2DAA6B;AAE7B,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AAEtB,MAAM,IAAI,GAAoB,IAAI,CAAC;AACnC,MAAM,gBAAgB,GAClB,yFAAyF,CAAC;AAC9F,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAChC,kDAAkD;AAClD,kEAAkE;AAClE,8CAA8C;AAC9C,MAAM,iBAAiB,GAAqC;IACxD,eAAe,EAAE,IAAI;IACrB,kBAAkB,EAAE,IAAI;IACxB,MAAM,EAAE,MAAM;CACjB,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,kBAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,oBAAW,CAAC,OAAO,CAAC,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEnE,qBAAqB;AACrB,kBAAQ;KACH,OAAO,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;KAC5C,IAAI,CAAC,GAAS,EAAE;IACb,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CACjC,OAAO,CAAC,GAAG,CAAC,sCAAsC,IAAI,SAAS,CAAC,CACnE,CAAC;IACF,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC,CAAC;KACD,KAAK,CAAC,CAAC,KAAc,EAAQ,EAAE;IAC5B,MAAM,KAAK,CAAC;AAChB,CAAC,CAAC,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"cors\"","webpack:///./src/routes/index.ts","webpack:///./src/routes/users/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/controllers/users/index.ts","webpack:///external commonjs \"bcrypt\"","webpack:///./src/models/index.ts","webpack:///./src/models/user.ts","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"cors\");","import * as usersRouter from './users/index';\r\n\r\nexport { usersRouter };\r\n","import { Router } from 'express';\r\nimport { userController } from '@server/controllers';\r\n\r\nconst router: Router = Router();\r\nconst apiURL = '/api/v1';\r\n// const apiURL = process.env.API_URL;\r\n\r\nrouter.get(`${apiURL}/users`, userController.getUsers);\r\nrouter.get(`${apiURL}/users/:id`, userController.getUserById);\r\nrouter.post(`${apiURL}/users`, userController.addUser);\r\nrouter.put(`${apiURL}/users/:id`, userController.updateUser);\r\nrouter.delete(`${apiURL}/users/:id`, userController.deleteUser);\r\n\r\nexport default router;\r\n","import * as userController from './users/index';\r\n\r\nexport { userController };\r\n","import { Response, Request } from 'express';\r\nimport { bcrypt } from 'bcrypt';\r\nimport { userSchema } from '@server/models';\r\nimport { User } from '@libs/interfaces';\r\n\r\nconst getUsers = async (req: Request, res: Response): Promise<void> => {\r\n    await userSchema\r\n        .find()\r\n        .select('-passwordHash')\r\n        .then((users: User[]) => {\r\n            res.status(200).send(users);\r\n        })\r\n        .catch((error) => {\r\n            const response = {\r\n                message: 'Users are empty',\r\n                error\r\n            };\r\n            res.status(400).json(response);\r\n        });\r\n};\r\n\r\nconst getUserById = async (req: Request, res: Response): Promise<void> => {\r\n    await userSchema\r\n        .findById(req.params.id)\r\n        .select('-passwordHash')\r\n        .then((user: User) => {\r\n            res.status(200).send(user);\r\n        })\r\n        .catch((error) => {\r\n            const response = {\r\n                message: 'userSchema is empty',\r\n                error\r\n            };\r\n            res.status(400).json(response);\r\n        });\r\n};\r\n\r\nconst addUser = async (req: Request, res: Response): Promise<void> => {\r\n    const body: User = req.body;\r\n    const user = {\r\n        name: body.name,\r\n        email: body.email,\r\n        passwordHash: bcrypt.hashSync(body.password, 10),\r\n        phone: body.phone,\r\n        isAdmin: body.isAdmin,\r\n        street: body.street,\r\n        apartment: body.apartment,\r\n        city: body.city,\r\n        zip: body.zip,\r\n        country: body.country\r\n    };\r\n\r\n    await new userSchema(user)\r\n        .save()\r\n        .then(async (user: User) => {\r\n            const users: User[] = await userSchema.find();\r\n            res.status(201).send({ user, users });\r\n        })\r\n        .catch((error) => {\r\n            const response = {\r\n                message: 'The userSchema cannot be created',\r\n                error\r\n            };\r\n            res.status(400).json(response);\r\n        });\r\n};\r\n\r\nconst updateUser = async (req: Request, res: Response): Promise<void> => {\r\n    const {\r\n        params: { id },\r\n        body\r\n    } = req;\r\n\r\n    await userSchema\r\n        .findByIdAndUpdate({ _id: id }, body)\r\n        .then(async (updatedUser: User) => {\r\n            const users: User[] = await userSchema.find();\r\n            res.status(200).send({ user: updatedUser, users });\r\n        })\r\n        .catch((error) => {\r\n            const response = {\r\n                message: 'The userSchema cannot be updated',\r\n                error\r\n            };\r\n            res.status(400).json(response);\r\n        });\r\n};\r\n\r\nconst deleteUser = async (req: Request, res: Response): Promise<void> => {\r\n    await userSchema\r\n        .findByIdAndRemove(req.params.id)\r\n        .then(async () => {\r\n            const users: User[] = await userSchema.find();\r\n            const response = {\r\n                message: 'The user is deleted',\r\n                users\r\n            };\r\n            res.status(200).json(response);\r\n        })\r\n        .catch((error) => {\r\n            const response = {\r\n                message: 'The user is not deleted',\r\n                error\r\n            };\r\n            res.status(400).json(response);\r\n        });\r\n};\r\n\r\nexport { getUsers, getUserById, addUser, updateUser, deleteUser };\r\n","module.exports = require(\"bcrypt\");","import userSchema from './user';\r\n\r\nexport { userSchema };\r\n","import { User } from '@libs/interfaces';\r\nimport { Schema, model } from 'mongoose';\r\n\r\nconst userSchema: Schema = new Schema(\r\n    {\r\n        name: { type: String, required: true },\r\n        email: { type: String, required: true },\r\n        passwordHash: { type: String, required: true },\r\n        phone: { type: String, required: true },\r\n        apartment: { type: String, default: '' },\r\n        street: { type: String, default: '' },\r\n        city: { type: String, default: '' },\r\n        zip: { type: String, default: '' },\r\n        country: { type: String, default: '' },\r\n        isAdmin: { type: Boolean, default: false },\r\n        profilePhoto: { type: { data: Buffer, contentType: String } },\r\n        dateCreated: { type: Date, default: null },\r\n        dateModified: { type: Date, default: Date.now }\r\n    },\r\n    { timestamps: true }\r\n);\r\n\r\nuserSchema.virtual('id').get(function () {\r\n    return this._id;\r\n});\r\n\r\nuserSchema.set('toJSON', {\r\n    virtuals: true\r\n});\r\n\r\nexport default model<User>('User', userSchema);\r\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport cors from 'cors';\r\nimport { usersRouter } from '@server/routes';\r\nimport * as path from 'path';\r\n\r\nconst app = express();\r\n\r\nconst port: string | number = 3000;\r\nconst connectionString =\r\n    'mongodb+srv://gowtham04raj:123asd123@clustereshop.stwfpfw.mongodb.net/?retryWrites=true';\r\nconst dbName = 'eshop-database';\r\n// const port: string | number = process.env.PORT;\r\n// const connectionString: string = process.env.CONNECTION_STRING;\r\n// const dbName: string = process.env.DB_NAME;\r\nconst connectionOptions: Record<string, boolean | string> = {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    dbName: dbName\r\n};\r\n\r\napp.use(cors());\r\napp.use(usersRouter.default);\r\napp.use('/assets', express.static(path.join(__dirname, 'assets')));\r\n\r\n// MongoDB Connection\r\nmongoose\r\n    .connect(connectionString, connectionOptions)\r\n    .then((): void => {\r\n        const server = app.listen(port, () =>\r\n            console.log(`Server running on http://localhost:${port}/api/v1`)\r\n        );\r\n        server.on('error', console.error);\r\n    })\r\n    .catch((error: unknown): void => {\r\n        throw error;\r\n    });\r\n"],"names":[],"sourceRoot":""}